apply plugin: 'com.android.application'
apply plugin: 'bugly'
apply plugin: 'com.google.ar.sceneform.plugin'
bugly {
    appId = '010cddf759' // 注册时分配的App ID
    appKey = '72f0b691-be5c-456b-968e-a9a80d193853' // 注册时分配的App Key
}
android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'

    defaultConfig {
        applicationId "com.haocang.hsdd"
        minSdkVersion 21
        targetSdkVersion 26
        versionCode 196
        versionName "2.1.2.0002"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        multiDexEnabled true
        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath = true
                arguments = [moduleName: project.getName()]
            }
        }
        configurations.all {
            exclude group: 'com.android.support', module: 'support-v13'
        }
//        multiDexEnabled trueDexOptions

        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }
    }
    splits {
        abi {
            enable true
            reset()
            include 'armeabi-v7a'
            universalApk false
        }
    }

    dexOptions {
        preDexLibraries false
//        incremental false
        javaMaxHeapSize "3072m"
    }

    signingConfigs {
        release {
            keyAlias 'commonsign'
            keyPassword 'haocangapp'
            storeFile file('./commonSign.jks')
//            storeFile file('D:/AndroidStudio/Mango/commonSign.jks')
            storePassword 'haocangapp'
        }
        loadSigningConfigs() //加载签名信息
    }
    buildTypes {
        debug {
            signingConfig signingConfigs.release
        }
        release {
            minifyEnabled false
//            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    splits {
        abi {
            enable true
            reset()
            include 'armeabi-v7a'
            universalApk false
        }
    }
    packagingOptions {
        pickFirst 'lib/arm64-v8a/libnative-lib.so'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
//        pickFirst 'lib/armeabi-v7a/libsqlite.so'
//        pickFirst 'lib/armeabi/libsqlite.so'
//        pickFirst 'lib/x86/libsqlite.so'
    }

    productFlavors {

    }
}

def loadSigningConfigs() {
    def Properties props = new Properties()
    def propFile = file('../signing.properties') //加载properties文件
    if (propFile.canRead()) {
        props.load(new FileInputStream(propFile))
        if (props != null && props.containsKey('RELEASE_STORE_FILE') && props.containsKey('RELEASE_STORE_PASSWORD') &&
                props.containsKey('RELEASE_KEY_ALIAS') && props.containsKey('RELEASE_KEY_PASSWORD')) {
            android.signingConfigs.release.storeFile = file(props['RELEASE_STORE_FILE'])
            android.signingConfigs.release.storePassword = props['RELEASE_STORE_PASSWORD']
            android.signingConfigs.release.keyAlias = props['RELEASE_KEY_ALIAS']
            android.signingConfigs.release.keyPassword = props['RELEASE_KEY_PASSWORD']
        } else {
            android.buildTypes.release.signingConfig = null
        }
    } else {
        android.buildTypes.release.signingConfig = null
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation('com.alibaba:arouter-api:1.3.1') {
        exclude group: 'com.android.support', module: 'support-v4'
    }
    annotationProcessor 'com.alibaba:arouter-compiler:1.1.4'
    implementation project(':water-link')
    api "com.facebook.react:react-native:+" // From node_modules.
    api 'com.github.wseemann:FFmpegMediaMetadataRetriever:1.0.14'
}